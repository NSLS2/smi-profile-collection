nx_model: NXmonochromatorModel # pydantic model associated with this schema
nxclass: NXmonochromator # group: NXmonochromator

energy: # field: "energy" belongs to NXmonochromator group
  nxclass: NX_FLOAT
  value: $post-run:en # fetch it from the device component 
  dtype: float64
  attrs:  # attrs belong to field: "energy"
    units: "keV"
    prices: "Euro"
    days: ["Mo", "We"]
    factors: [1.34, 2.78]
    destination: {"departement": "A23"}
    value: 12.34
    PI: 3.1415
    active: [True, False]
  transformation:
    expression: 3 * x**2 + np.exp(np.log(5)) + 1 # symbolic expression for the transformation
    target: value # specifies the name of array to which expression is applied
GRATING:  # group: 'GRATING' belongs to NXmonochromator group
  nxclass: NXgrating
  attrs: # attrs belong to group "GRATING"
    attr_0: "new"
    value: 167
  diffraction_order: # field: "diffraction_order" belongs to group "GRATING"
    nxclass: NX_INT
    value: $pre-run-cpt:grating
    dtype: int32
    attrs: # attrs belong to field "diffraction_order"
      at_0: 13.14
      at_1: [2.03, 4.05]
      value: "some_value"

TRANSFORMATIONS: # group: 'TRANSFORMATIONS' belongs to NXmonochromator group
  nxclass: NXtransformations
  alpha:  # field: "alpha" belongs to TRANSFORMATIONS group
    nxclass: NX_FLOAT
    value: $post-run:alpha # fetch it from the device component
    dtype: float64
    attributes:
      transformation_type:
        value: $pre-run-md:transformations:alpha:transformation_type # fetch it from the device metadata (happi)
        dtype: str
      units:
        value: $pre-run-md:transformations:alpha:units # fetch it from the device metadata (happi)
        dtype: str
      vector:
        value: $pre-run-md:transformations:alpha:vector # fetch it from the device metadata (happi)
        dtype: int64
      depends_on:
        value: $pre-run-md:transformations:alpha:depends_on # fetch it from the device metadata (happi)
        dtype: str
      description:
        value: $pre-run-md:transformations:alpha:description # fetch it from the device metadata (happi)
        dtype: str
  beta: # field: "beta" belongs to TRANSFORMATIONS group
    nxclass: NX_FLOAT
    value: $post-run:beta # fetch it from the device component
    dtype: float64
    attributes:
      transformation_type:
        value: $pre-run-md:transformations:beta:transformation_type # fetch it from the device metadata (happi)
        dtype: str
      units:
        value: $pre-run-md:transformations:beta:units # fetch it from the device metadata (happi)
        dtype: str
      vector:
        value: $pre-run-md:transformations:beta:vector # fetch it from the device metadata (happi)
        dtype: int64
      depends_on:
        value: $pre-run-md:transformations:beta:depends_on # fetch it from the device metadata (happi)
        dtype: str
      description:
        value: $pre-run-md:transformations:beta:description # fetch it from the device metadata (happi)
        dtype: str
  theta: # field: "theta" belongs to TRANSFORMATIONS group
    nxclass: NX_FLOAT
    value: $post-run:theta # fetch it from the device component
    dtype: float64
    attributes:
      transformation_type:
        value: $pre-run-md:transformations:theta:transformation_type # fetch it from the device metadata (happi)
        dtype: str
      units:
        value: $pre-run-md:transformations:theta:units # fetch it from the device metadata (happi)
        dtype: str
      vector:
        value: $pre-run-md:transformations:theta:vector # fetch it from the device metadata (happi)
        dtype: int64
      depends_on:
        value: $pre-run-md:transformations:theta:depends_on # fetch it from the device metadata (happi)
        dtype: str
      description:
        value: $pre-run-md:transformations:theta:description # fetch it from the device metadata (happi)
        dtype: str
  alpha_setpoint: # field: "alpha_setpoint" belongs to TRANSFORMATIONS group
    nxclass: NX_FLOAT
    value: $post-run:alpha_setpoint # fetch it from the device component
    dtype: float64

  beta_setpoint: # field: "beta_setpoint" belongs to TRANSFORMATIONS group
    nxclass: NX_FLOAT
    value: $post-run:beta_setpoint # fetch it from the device component
    dtype: float64

  theta_setpoint: # field: "theta_setpoint" belongs to TRANSFORMATIONS group
    nxclass: NX_FLOAT
    value: $post-run:theta_setpoint # fetch it from the device component
    dtype: float64

description: # field: 'description' belongs to NXmonochromator group
  nxclass: NX_CHAR
  value: $pre-run-md:description # fetch it from the device metadata (happi)
  dtype: str
attrs:  # attrs belong to NXmonochromator group
  attr_0: 3.1415
  value: "3.1415"
  attr_1: {'a':'2'}
  attr_2: "{'b':'1'}"
  attr_3: [1.02, 3.04, 5.06]
  attr_4: [5, 6, 7]
  attr_5: True

###
### NXmonochromator group allows extra groups/fields that are not explicitly defined in the model
###
someGroup: # additional group: "someGroup"
  nxclass: NXsomeClass
  attrs:
    attr_1: {"a":"2"}
    attr_2: [5.06, 7.08]
  energy: # field energy belonging to someGroup
    nxclass: NX_FLOAT
    value: $post-run:en
    dtype: float64
    attrs:
      attr_1: "PI"
      attr_2: 3.1415
someDataset: # additional dataset: "someDataset"
  nxclass: NX_FLOAT
  value: $post-run:en
  dtype: float64
